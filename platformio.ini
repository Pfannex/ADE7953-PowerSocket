; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; http://docs.platformio.org/page/projectconf.html

[platformio]

[common]
lib_deps =
  https://github.com/esp8266/Arduino
  https://github.com/prampec/arduino-softtimer-nopci
  https://github.com/pasko-zh/brzo_i2c
; https://github.com/squix78/esp8266-oled-ssd1306
  https://github.com/lexus2k/ssd1306
; this fork omits Time.h because it conflicts with time.h on
; file systems with case-insensitive filenames, e.g. Windows
  https://github.com/borisneubert/Time
  https://github.com/bblanchon/ArduinoJson
  https://github.com/knolleary/pubsubclient
  https://github.com/me-no-dev/ESPAsyncWebServer
  https://github.com/nailbuster/esp8266FTPServer
; use a form that contains a millisecond precision
;  https://github.com/arduino-libraries/NTPClient
  https://github.com/blackketter/NTPClient
  https://github.com/JChristensen/Timezone
  https://github.com/adafruit/Adafruit_NeoPixel
  https://github.com/PaulStoffregen/OneWire
  https://github.com/milesburton/Arduino-Temperature-Control-Library
;https://github.com/Pfannex/Adafruit_BMP085_Library_BrzoI2C
  https://github.com/adafruit/Adafruit-BMP085-Library
  https://github.com/adafruit/Adafruit_Si7021
  https://github.com/adafruit/Adafruit-MCP23017-Arduino-Library
  https://github.com/hexenmeister/AS_BH1750
  https://github.com/adafruit/Adafruit_Sensor
  https://github.com/adafruit/Adafruit_BMP280_Library
  https://github.com/adafruit/Adafruit_VEML6070
;  https://github.com/CSSHL/ESP8266-Arduino-cryptolibs

;[env:nodemcuv2]
;platform = espressif8266
;board = nodemcuv2
;framework = arduino
;lib_deps = ${common.lib_deps}

[env:d1_mini]
; general info for this section found at:
; http://docs.platformio.org/en/latest/platforms/espressif8266.html
; https://github.com/esp8266/Arduino/blob/master/boards.txt#L180
;
; platform
platform = espressif8266
; alternative platform: use this for staging version of Arduino framework
; platform = https://github.com/platformio/platform-espressif8266.git#feature/stage
;
; please use d1_mini because the output path is hardcoded in the gulpfile.js
board = d1_mini
framework = arduino
lib_deps = ${common.lib_deps}
upload_speed = 921600
;
; create data folder and tarball on builfds
extra_scripts =
  post:pio_hooks.py
;
; ****************************************
; ***** device-developer parts below *****
; ****************************************
;
; ***** general buld flags *****
;
; ----- primary build flags -----
; for MQTT (always include):
;     -DMQTT_MAX_PACKET_SIZE=2048
;     (a higher value for MQTT_MAX_PACKET_SIZE trashes the memory!)
;
; for debugging:
;     emit additional debug messages: -DDEBUG
;     skip authentication in web interface: -DNO_AUTH
;
; disable OTA (for SWA1 with 1MB flash memory):
;     -DNO_OTA
;
; flash-mode qio, dout, dio, dout:
;     board_build.flash_mode = dout
;
; set flash-frequency to 40MHz:
;     board_build.f_flash = 40000000L
;     upload_resetmethod = ck
;
; ----- additional build flags -----
; for debugging: -Og -ggdb
; optimize for size: -Os
; optimize for speed: -O2
;
; ***** device-specific flags *****
;
; ----- SWA1 (2MB with 1MB SPIFFS layout) -----
;-Wl,-Teagle.flash.2m.ld
;
; ----- SWA1 (1MB with 256kB SPIFFS layout) -----
;-Wl,-Teagle.flash.1m256.ld
;
; ----- simpleSwitch (4MB with 2MB SPIFFS layout) -----
;-Wl,-Teagle.flash.4m2m.ld
;

; ***** your build flags *****
build_flags = -Wl,-Teagle.flash.4m2m.ld -O2 -DDEBUG -DMQTT_MAX_PACKET_SIZE=2048
